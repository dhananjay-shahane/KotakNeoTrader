Create a Python Flask web application using Bootstrap for the frontend. The app should integrate the Kotak Neo API (refer to the official Kotak Neo API GitHub repository and its documentation for available endpoints and authentication methods). The app must implement login using TOTP (Time-based One-Time Password), as supported by the Kotak Neo API, following the official flow (see the Totp_login and Totp_validation classes/methods in the SDK).

Requirements:

Use Flask for the backend and Bootstrap for the frontend UI.

Implement a login page where users input their credentials and TOTP code to authenticate via the Kotak Neo API.

After successful login, allow users to access core trading functionalities (order placement, modification, cancellation, position tracking, holdings, live quotes, etc.), reusing the working code from my Jupyter notebook for these features.

Display only real, live data from the Kotak Neo API (no demo or mock data).

Ensure session management so that only authenticated users can access trading features.

Structure the code with clear separation of routes, templates, and static files.

Provide sample templates for login and dashboard pages using Bootstrap.

Use the latest version of the Kotak Neo API Python SDK as per the GitHub repo instructions (pip install "git+https://github.com/Kotak-Neo/Neo_sdk_v2.git#egg=neo_api_client").

Add comments in the code to indicate where to insert the Jupyter notebook trading logic.

If possible, include error handling for failed logins and API errors.

References:

Kotak Neo API GitHub: https://github.com/Kotak-Neo/kotak-neo-api/

Example SDK usage and TOTP login flow from the repo and documentation.

Note:
I have already written and tested the trading functionalities (order management, position tracking, etc.) in a Jupyter notebook. Please indicate where to place this code in the Flask app, so it is accessible after login.

Important:
All data displayed in the web app must be fetched live from the Kotak Neo APIâ€”do not use demo, sample, or mock data at any point.